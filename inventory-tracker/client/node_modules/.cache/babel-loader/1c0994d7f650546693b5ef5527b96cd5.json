{"ast":null,"code":"var _jsxFileName = \"/Users/aribshaikh/inventory-tracker/src/components/inventory.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Container, CssBaseline, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { CSVLink } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(12),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(4)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 3)\n  }\n});\n\nconst columns = [{\n  field: '_id',\n  headerName: 'id',\n  width: 200\n}, {\n  field: 'product',\n  headerName: 'Product',\n  width: 150\n}, {\n  field: 'amount',\n  headerName: 'Amount',\n  width: 150\n}, {\n  field: 'vendor',\n  headerName: 'vendor',\n  width: 150\n}];\n\nclass Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.csvLink = /*#__PURE__*/React.createRef();\n\n    this.getTransactionData = async () => {\n      await axios.get(\"http://localhost:5000/download\").then(res => this.setState({\n        data: res.data\n      })).catch(e => console.log(e));\n      this.csvLink.current.link.click();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.onChange2 = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(e.target.value);\n    };\n\n    this.onDropdownSelected = e => {\n      console.log(\"THE VAL\", e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      }); //here you will see the current selected value of the select input\n    };\n\n    this.state = {\n      id: '',\n      idDelete: '',\n      product: '',\n      productUpdate: '',\n      amount: '',\n      amountUpdate: '',\n      vendor: '',\n      vendorUpdate: '',\n      inventory: [],\n      data: []\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getTransactionData = this.getTransactionData.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000\").then(res => this.setState({\n      inventory: res.data\n    }));\n  }\n\n  onSubmit(e) {\n    const inventory = {\n      product: this.state.product,\n      amount: this.state.amount,\n      color: this.state.color,\n      vendor: this.state.vendor\n    };\n    console.log(inventory);\n\n    if (e.nativeEvent.submitter.name === \"add\") {\n      axios.post(\"http://localhost:5000/add\", inventory).then(res => console.log(res.data));\n    }\n\n    if (e.nativeEvent.submitter.name === \"update\") {\n      console.log('from frontend' + this.state.id);\n      axios.patch(\"http://localhost:5000/\" + this.state.id, inventory).then(res => console.log(res.data));\n    }\n\n    if (e.nativeEvent.submitter.name === \"delete\") {\n      axios.delete(\"http://localhost:5000/\" + this.state.idDelete, inventory).then(res => console.log(res.data));\n    }\n\n    axios.get(\"http://localhost:5000\").then(res => this.setState({\n      inventory: res.data\n    }));\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const dropdown = this.state.inventory.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: this.state.id,\n        onChange: this.onChange,\n        children: item._id\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this);\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Add Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                id: \"product\",\n                label: \"Product\",\n                name: \"product\",\n                autoFocus: true,\n                value: this.state.product,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                id: \"amount\",\n                label: \"Amount\",\n                name: \"amount\",\n                value: this.state.amount,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                name: \"color\",\n                label: \"Color\",\n                id: \"color\",\n                value: this.state.color,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                name: \"vendor\",\n                label: \"Vendor\",\n                type: \"vendor\",\n                id: \"vendor\",\n                value: this.state.vendor,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                name: \"add\",\n                variant: \"contained\",\n                className: classes.submit,\n                children: \"Add Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Update Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Select the item that needs to be updated below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"id\",\n          onChange: this.onDropdownSelected,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), this.state.inventory.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item._id,\n              children: item._id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            noValidate: true,\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  id: \"product_change\",\n                  label: \"Product\",\n                  name: \"productUpdate\",\n                  value: this.state.productUpdate,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  id: \"amount\",\n                  label: \"Amount\",\n                  name: \"amount\",\n                  value: this.state.amount,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  name: \"color\",\n                  label: \"Color\",\n                  id: \"color\",\n                  value: this.state.color,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  name: \"vendor\",\n                  label: \"Vendor\",\n                  type: \"vendor\",\n                  id: \"vendor\",\n                  value: this.state.vendor,\n                  onChange: this.onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  name: \"update\",\n                  variant: \"contained\",\n                  className: classes.submit,\n                  children: \"Update Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Delete Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Select the item id that needs to be deleted below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"idDelete\",\n          onChange: this.onDropdownSelected,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), this.state.inventory.map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item._id,\n              children: item._id\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: this.onSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              name: \"delete\",\n              variant: \"contained\",\n              className: classes.submit,\n              children: \"Delete Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 800,\n          width: '75%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: this.state.inventory,\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          name: \"export\",\n          variant: \"contained\",\n          className: classes.submit,\n          onClick: this.getTransactionData,\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: this.state.inventory,\n          filename: \"data.csv\",\n          ref: this.csvLink,\n          target: \"_blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Inventory);","map":{"version":3,"sources":["/Users/aribshaikh/inventory-tracker/src/components/inventory.js"],"names":["React","Component","axios","Button","Container","CssBaseline","TextField","Grid","withStyles","DataGrid","CSVLink","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","columns","field","headerName","Inventory","constructor","props","csvLink","createRef","getTransactionData","get","then","res","setState","data","catch","e","console","log","current","link","click","onChange","target","name","value","onChange2","onDropdownSelected","state","id","idDelete","product","productUpdate","amount","amountUpdate","vendor","vendorUpdate","inventory","bind","onSubmit","componentDidMount","color","nativeEvent","submitter","post","patch","delete","render","classes","dropdown","map","item","i","_id","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Button, Container, CssBaseline, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { CSVLink } from \"react-csv\";\n\nconst useStyles = theme => ({\n    paper: {\n      marginTop: theme.spacing(12),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%', \n      marginTop: theme.spacing(4),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 3),\n    },\n});\n\n\nconst columns = [\n  { field: '_id', headerName: 'id', width: 200 },\n  { field: 'product', headerName: 'Product', width: 150 },\n  { field: 'amount', headerName: 'Amount', width: 150 },\n  { field: 'vendor', headerName: 'vendor', width: 150 },\n];\n\nclass Inventory extends Component {\n    csvLink = React.createRef()\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            id: '',\n            idDelete: '',\n            product: '',\n            productUpdate: '',\n            amount: '',\n            amountUpdate: '',\n            vendor: '',\n            vendorUpdate: '',\n            inventory: [],\n            data: []\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.getTransactionData = this.getTransactionData.bind(this)\n    }\n\n    componentDidMount() {\n      axios.get(\"http://localhost:5000\")\n        .then(res => this.setState({inventory: res.data}))\n    }\n\n    getTransactionData = async () => {\n      await axios.get(\"http://localhost:5000/download\")\n        .then(res => this.setState({data: res.data}))\n        .catch((e) => console.log(e))\n      this.csvLink.current.link.click()\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(e.target.value);\n    }\n    onChange2 = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(e.target.value);\n  }\n    onDropdownSelected = (e) => {\n      console.log(\"THE VAL\", e.target.value);\n      this.setState({ [e.target.name]: e.target.value });\n      //here you will see the current selected value of the select input\n  }\n\n    onSubmit(e) {\n\n        const inventory = {\n            product: this.state.product,\n            amount: this.state.amount,\n            color: this.state.color,\n            vendor: this.state.vendor\n        }\n\n        console.log(inventory)\n\n        if (e.nativeEvent.submitter.name === \"add\") {\n          axios.post(\"http://localhost:5000/add\", inventory)\n            .then(res => console.log(res.data));\n        }\n\n        if (e.nativeEvent.submitter.name === \"update\") {\n          console.log('from frontend' + this.state.id)\n          axios.patch(\"http://localhost:5000/\"+this.state.id, inventory)\n            .then(res => console.log(res.data));\n        }\n\n        if (e.nativeEvent.submitter.name === \"delete\"){\n          axios.delete(\"http://localhost:5000/\"+this.state.idDelete, inventory)\n            .then(res => console.log(res.data));\n        }\n\n        axios.get(\"http://localhost:5000\")\n        .then(res => this.setState({inventory: res.data}))\n    }\n\n\n    render() {\n        const { classes } = this.props\n        const dropdown = this.state.inventory.map((item, i) => {\n          return (\n            <option key={i} value={this.state.id} onChange={this.onChange}>{item._id}</option>\n          )\n        }, this);\n        return(\n          <Container component=\"main\" maxWidth=\"md\">\n            {/* <CssBaseline /> */}\n              <h2> Add Items</h2>\n              <Grid item xs={8}>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"product\"\n                        label=\"Product\"\n                        name=\"product\"\n                        autoFocus\n                        value={this.state.product}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"amount\"\n                        value={this.state.amount}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"color\"\n                        label=\"Color\"\n                        id=\"color\"\n                        value={this.state.color}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"vendor\"\n                        label=\"Vendor\"\n                        type=\"vendor\"\n                        id=\"vendor\"\n                        value={this.state.vendor}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"add\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Add Item\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Grid>\n              \n              <div>\n                <h2> Update Item</h2>\n                <h4> Select the item that needs to be updated below</h4>\n                <select name = \"id\" onChange={this.onDropdownSelected}>\n                <option> - </option>\n                {this.state.inventory.map((item, i) => {\n          return (\n            <option key={i}  value={item._id}>{item._id}</option>\n          )\n        })}\n                 \n                </select>\n                <Grid item xs={8}>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"product_change\"\n                        label=\"Product\"\n                        name=\"productUpdate\"\n                        value={this.state.productUpdate}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"amount\"\n                        value={this.state.amount}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"color\"\n                        label=\"Color\"\n                        id=\"color\"\n                        value={this.state.color}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"vendor\"\n                        label=\"Vendor\"\n                        type=\"vendor\"\n                        id=\"vendor\"\n                        value={this.state.vendor}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing = {2}>\n                    \n                    <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"update\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Update Item\n                      </Button>\n                    </Grid>\n                    {/* <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"delete\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Delete Item\n                      </Button>\n                    </Grid> */}\n                  </Grid>\n                </form>\n              </Grid>\n              </div>\n              <div>\n                <h2> Delete Item</h2>\n                <h4> Select the item id that needs to be deleted below</h4>\n                <select name = \"idDelete\" onChange={this.onDropdownSelected}>\n                <option> - </option>\n                {this.state.inventory.map((item, i) => {\n          return (\n            <option key={i}  value={item._id}>{item._id}</option>\n          )\n        })}\n                 \n                </select>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"delete\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Delete Item\n                      </Button>\n                    </Grid>\n                    </form>\n              </div>\n              \n              <div style={{ height: 800, width: '75%' }}>\n                <DataGrid rows={this.state.inventory} columns={columns} />\n              </div>\n              <Grid item xs={3}>\n                      <Button\n                          type=\"submit\"\n                          name=\"export\"\n                          variant=\"contained\"\n                          className={classes.submit}\n                          onClick={this.getTransactionData}\n                        >\n                          Export CSV\n                        </Button>\n                        <CSVLink\n                            data={this.state.inventory}\n                            filename=\"data.csv\"\n                            ref={this.csvLink}\n                            target=\"_blank\" \n                        />\n                    </Grid>\n          </Container>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Inventory);"]},"metadata":{},"sourceType":"module"}
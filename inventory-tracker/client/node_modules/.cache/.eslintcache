[{"/Users/aribshaikh/inventory-tracker/src/index.js":"1","/Users/aribshaikh/inventory-tracker/src/App.js":"2","/Users/aribshaikh/inventory-tracker/src/reportWebVitals.js":"3","/Users/aribshaikh/inventory-tracker/src/components/inventory.js":"4"},{"size":500,"mtime":1642538030319,"results":"5","hashOfConfig":"6"},{"size":280,"mtime":1642640238108,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1642538030320,"results":"8","hashOfConfig":"6"},{"size":11323,"mtime":1642643183236,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11s15ll",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/aribshaikh/inventory-tracker/src/index.js",[],["21","22"],"/Users/aribshaikh/inventory-tracker/src/App.js",["23"],"import logo from './logo.svg';\nimport Inventory from './components/inventory'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n// import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <br></br>\n      <Inventory />\n\n    </div>\n\n  );\n}\n\nexport default App;\n","/Users/aribshaikh/inventory-tracker/src/reportWebVitals.js",[],"/Users/aribshaikh/inventory-tracker/src/components/inventory.js",["24","25"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Button, Container, CssBaseline, TextField, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { CSVLink } from \"react-csv\";\n\nconst useStyles = theme => ({\n    paper: {\n      marginTop: theme.spacing(12),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%', \n      marginTop: theme.spacing(4),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 3),\n    },\n});\n\n\nconst columns = [\n  { field: '_id', headerName: 'id', width: 200 },\n  { field: 'product', headerName: 'Product', width: 150 },\n  { field: 'amount', headerName: 'Amount', width: 150 },\n  { field: 'color', headerName: 'Color', width: 150 },\n\n  { field: 'vendor', headerName: 'Vendor', width: 150 },\n];\n\nclass Inventory extends Component {\n    csvLink = React.createRef()\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            id: '',\n            idDelete: '',\n            product: '',\n            productUpdate: '',\n            amount: '',\n            amountUpdate: '',\n            vendor: '',\n            vendorUpdate: '',\n            inventory: [],\n            data: []\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.getTransactionData = this.getTransactionData.bind(this)\n    }\n\n    componentDidMount() {\n      axios.get(\"http://localhost:5000\")\n        .then(res => this.setState({inventory: res.data}))\n    }\n\n    getTransactionData = async () => {\n      await axios.get(\"http://localhost:5000/download\")\n        .then(res => this.setState({data: res.data}))\n        .catch((e) => console.log(e))\n      this.csvLink.current.link.click()\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(e.target.value);\n    }\n    onChange2 = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(e.target.value);\n  }\n    onDropdownSelected = (e) => {\n      console.log(\"THE VAL\", e.target.value);\n      this.setState({ [e.target.name]: e.target.value });\n      //here you will see the current selected value of the select input\n  }\n\n    onSubmit(e) {\n\n        const inventory = {\n            product: this.state.product,\n            amount: this.state.amount,\n            color: this.state.color,\n            vendor: this.state.vendor\n        }\n\n        console.log(inventory)\n\n        if (e.nativeEvent.submitter.name === \"add\") {\n          axios.post(\"http://localhost:5000/add\", inventory)\n            .then(res => console.log(res.data));\n        }\n\n        if (e.nativeEvent.submitter.name === \"update\") {\n          console.log('from frontend' + this.state.id)\n          axios.patch(\"http://localhost:5000/\"+this.state.id, inventory)\n            .then(res => console.log(res.data));\n        }\n\n        if (e.nativeEvent.submitter.name === \"delete\"){\n          axios.delete(\"http://localhost:5000/\"+this.state.idDelete, inventory)\n            .then(res => console.log(res.data));\n        }\n\n        axios.get(\"http://localhost:5000\")\n        .then(res => this.setState({inventory: res.data}))\n    }\n\n\n    render() {\n        const { classes } = this.props\n        const dropdown = this.state.inventory.map((item, i) => {\n          return (\n            <option key={i} value={this.state.id} onChange={this.onChange}>{item._id}</option>\n          )\n        }, this);\n        return(\n          <Container component=\"main\" maxWidth=\"md\">\n            <div class = \"center\">\n              <h1> Inventory Tracker </h1>\n            </div>\n            <div style={{ height: 400, width: '75%' }}>\n                <DataGrid rows={this.state.inventory} columns={columns} />\n              </div>\n              <Grid item xs={3}>\n                      <Button\n                          type=\"submit\"\n                          name=\"export\"\n                          variant=\"contained\"\n                          className={classes.submit}\n                          onClick={this.getTransactionData}\n                        >\n                          Export CSV\n                        </Button>\n                        <CSVLink\n                            data={this.state.inventory}\n                            filename=\"data.csv\"\n                            ref={this.csvLink}\n                            target=\"_blank\" \n                        />\n                    </Grid>\n              <h2> Add Items</h2>\n              <Grid item xs={8}>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"product\"\n                        label=\"Product\"\n                        name=\"product\"\n                        autoFocus\n                        value={this.state.product}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"amount\"\n                        value={this.state.amount}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"color\"\n                        label=\"Color\"\n                        id=\"color\"\n                        value={this.state.color}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"vendor\"\n                        label=\"Vendor\"\n                        type=\"vendor\"\n                        id=\"vendor\"\n                        value={this.state.vendor}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"add\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Add Item\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Grid>\n              \n              <div>\n                <h2> Update Item</h2>\n                <h4> Select the item that needs to be updated below</h4>\n                <select name = \"id\" onChange={this.onDropdownSelected}>\n                <option> - </option>\n                {this.state.inventory.map((item, i) => {\n          return (\n            <option key={i}  value={item._id}>{item._id}</option>\n          )\n        })}\n                 \n                </select>\n                <Grid item xs={8}>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"product_change\"\n                        label=\"Product\"\n                        name=\"productUpdate\"\n                        value={this.state.productUpdate}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"amount\"\n                        value={this.state.amount}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"color\"\n                        label=\"Color\"\n                        id=\"color\"\n                        value={this.state.color}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"vendor\"\n                        label=\"Vendor\"\n                        type=\"vendor\"\n                        id=\"vendor\"\n                        value={this.state.vendor}\n                        onChange={this.onChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing = {2}>\n                    \n                    <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"update\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Update Item\n                      </Button>\n                    </Grid>\n                    {/* <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"delete\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Delete Item\n                      </Button>\n                    </Grid> */}\n                  </Grid>\n                </form>\n              </Grid>\n              </div>\n              <div>\n                <h2> Delete Item</h2>\n                <h4> Select the item id that needs to be deleted below</h4>\n                <select name = \"idDelete\" onChange={this.onDropdownSelected}>\n                <option> - </option>\n                {this.state.inventory.map((item, i) => {\n          return (\n            <option key={i}  value={item._id}>{item._id}</option>\n          )\n        })}\n                 \n                </select>\n                <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                <Grid item xs={3}>\n                      <Button\n                        type=\"submit\"\n                        name=\"delete\"\n                        variant=\"contained\"\n                        className={classes.submit}\n                      >\n                        Delete Item\n                      </Button>\n                    </Grid>\n                    </form>\n              </div>\n              \n              \n          </Container>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Inventory);",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":3,"column":29,"nodeType":"32","messageId":"33","endLine":3,"endColumn":40},{"ruleId":"30","severity":1,"message":"35","line":117,"column":15,"nodeType":"32","messageId":"33","endLine":117,"endColumn":23},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CssBaseline' is defined but never used.","'dropdown' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]